Lecture Notes: 
	- Malicious Software: 
		- Malware is any software used to disrupt computer or mobile operations, gather sensitive information, gain access to private computer systems. 
		- roughly all malware (70%) is a trojan horse (software disguised as another software) 
		- 5-10 % are viruses
		- 10% ransomware
		- 5% worms
		- 5-10% other
		- Trojan horse is a simple malware piece, doesn't have to trick anything besides the user
	- Malware History: 
		- Conceptualized by John Von Neumann
			- published paper in 1949 titled "theory of self-reproducing automata"
			- provided sample pseudo-code to demonstrate theory
		- Recognized as the first computer virus
		- malware has not fundamentally changes since his theory and von Neumann's work has heavily influenced malware authors to this day 
		- Malware's main goal is to reproduce itself (copies itself so that it runs persistent on the users machine) 
		- it's ultimate goal is to harden itself on the users machine so that it cannot be removed 
		- Worms want to spread through more machines, so they want to effect networks
	- Classification of Malware:
		- Two broad categories: 
			1) how it spreads
			2) actions or payloads
		- Additionally consider: 
			1) host-based (parasitic code, like viruses)
				- viruses are typically specific for a platform
			2) independent/self-contained (worms, trojans, bots)
				-  do not require some specific environment
			3) replicating (viruses and worms)
			4) non-replicating (trojans, span, backdoors)
	- Advanced Persistent Threat (APT):
		- Many different techniques can be used to deploy APT: 
			- social engineering (very common)
			- spear-phishing
			- drive-by-downloads
		- think of APT being synonymous with malware
	- Viruses:
		- software programs that infect other programs
			- modifies target programs to include a copy of the virus
			- replicate themselves and continue on to infect other programs
			- typically can spread easily through LAN networks and connected devices 
		- When attached to a program, it gets all of the same permissions as the original program with user executor permissions 
		- have three main components: 
			1) infection mechanism ( or infection vector): 
				- how the virus spreads
			2) trigger
				- some event that causes the virus to activate 
			3) payload
				- what the virus does (besides spreading)
				- can be harmful or benign
	- Case Study: Creeper:
		- Appeared in 71
			- first reported virus in the wild and spread over ARPANET (internet before the internet) 
		- Affected the DEC PDP-10 computer which ran TENEX (TOPS-20) operating system
		- Virus displayed "I'm the creeper, catch me if you can!" On infected systems 
		- Program called Reaper created to eliminate Creeper 
		- added itself to any sync queue, this means that it would spread from another computer during a sync and if they do not
		 clean, by organizing, it would just get resent out
		- reaper was created to hunt after creeper after some reverse engineering, when it found creeper it would kill the process and delete
